{"version":3,"sources":["features/catalog/product/Product.tsx","features/cart/cart-reducer.ts","features/catalog/Catalog.tsx","features/cart/purchase/Purchase.tsx","features/catalog/orderForm/OrderForm.tsx","features/cart/Cart.tsx","utils/firebase.ts","features/catalog/catalog-reducer.ts","app/App.tsx","reportWebVitals.ts","app/store.ts","index.tsx","features/catalog/product/Product.module.css"],"names":["Product","React","memo","props","buttonDisabled","useSelector","state","cart","books","some","book","id","Grid","container","direction","justify","alignItems","style","minHeight","item","src","image","alt","className","title","description","author","price","Button","variant","disabled","color","onClick","addToCart","slice","createSlice","name","initialState","totalPrice","reducers","action","every","payload","push","count","incrQuantityAC","index","findIndex","el","productId","decrQuantityAC","splice","calculateCost","newTotalPrice","reduce","sum","current","Math","floor","cartReducer","reducer","actions","Catalog","catalog","dispatch","useDispatch","addToCartHandler","useCallback","products","map","margin","md","Paper","elevation","padding","Container","spacing","Purchase","alignContent","xs","maxWidth","size","decrQuantity","incrQuantity","OrderForm","formik","useFormik","initialValues","surname","address","phone","onSubmit","values","handleSubmit","type","label","fullWidth","getFieldProps","Cart","marginBottom","marginTop","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","setProduct","catalogReducer","App","useEffect","database","ref","on","snapshot","val","useState","showCatalog","setShowCatalog","changeShowHandler","button","AppBar","position","Toolbar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","configureStore","middleware","getDefaultMiddleware","prepend","thunkMiddleWare","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.82f9822a.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './Product.module.css'\r\nimport {Button, Grid} from '@material-ui/core';\r\nimport {BookType} from '../catalog-reducer';\r\nimport {useSelector} from 'react-redux';\r\nimport {RootState} from '../../../app/store';\r\nimport {ExtendedBookType} from '../../cart/cart-reducer';\r\n\r\nexport type ProductPropsType = {\r\n    book: BookType\r\n    addToCart: (book: BookType) => void\r\n}\r\n\r\nexport const Product = React.memo((props: ProductPropsType) => {\r\n    const productInCart = useSelector<RootState, Array<BookType & ExtendedBookType>>(state => state.cart.books)\r\n\r\n    const buttonDisabled = productInCart.some(book => book.id === props.book.id)\r\n\r\n    const addToCartHandler = () => {\r\n        props.addToCart(props.book)\r\n    }\r\n\r\n    return (\r\n        <Grid container direction=\"column\" justify=\"space-between\" alignItems=\"center\" style={{minHeight: '550px'}}>\r\n            <Grid item>\r\n                <img src={props.book.image} alt=\"\" className={style.image}/>\r\n            </Grid>\r\n            <Grid item>\r\n                <p>{props.book.title}</p>\r\n                <p>{props.book.description}</p>\r\n                <p>{props.book.author}</p>\r\n                <p>{`${props.book.price} $`}</p>\r\n            </Grid>\r\n            <Grid item>\r\n                <Button variant=\"contained\" disabled={buttonDisabled} color=\"primary\" onClick={addToCartHandler}>add\r\n                    cart</Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n})","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\nimport {BookType} from '../catalog/catalog-reducer';\r\n\r\nexport type CartProductType = {\r\n    books: Array<BookType & ExtendedBookType>\r\n    totalPrice: number\r\n}\r\n\r\nexport type ExtendedBookType = {\r\n    count: number\r\n}\r\n\r\n\r\nexport const slice = createSlice({\r\n    name: 'cart',\r\n    initialState: {books: [], totalPrice: 0} as CartProductType,\r\n    reducers: {\r\n        addToCart(state, action: PayloadAction<BookType>) {\r\n            if (state.books.every(book => book.id !== action.payload.id)) {\r\n                state.books.push({...action.payload, count: 1})\r\n            }\r\n        },\r\n        incrQuantityAC(state, action: PayloadAction<{ productId: number }>) {\r\n            let index = state.books.findIndex(el => el.id === action.payload.productId)\r\n            state.books[index].count += 1\r\n        },\r\n        decrQuantityAC(state, action: PayloadAction<{ productId: number }>) {\r\n            const index = state.books.findIndex(el => el.id === action.payload.productId)\r\n\r\n            state.books[index].count -= 1\r\n\r\n            if (state.books[index].count === 0) {\r\n                state.books.splice(index, 1)\r\n            }\r\n        },\r\n        calculateCost(state, action: PayloadAction) {\r\n            let newTotalPrice = state.books.reduce((sum, current) => sum + current.price * current.count, 0)\r\n            newTotalPrice = Math.floor(newTotalPrice * 100) / 100\r\n            state.totalPrice = newTotalPrice\r\n        }\r\n    }\r\n})\r\n\r\nexport const cartReducer = slice.reducer\r\nexport const {addToCart, incrQuantityAC, decrQuantityAC, calculateCost} = slice.actions","import React, {useCallback} from 'react';\r\nimport {Container, Grid, Paper} from '@material-ui/core';\r\nimport {Product} from './product/Product';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootState} from '../../app/store';\r\nimport {BookType} from './catalog-reducer';\r\nimport {addToCart, calculateCost} from '../cart/cart-reducer';\r\n\r\nexport const Catalog = React.memo(() => {\r\n    const books = useSelector<RootState, Array<BookType>>(state => state.catalog.book)\r\n    const dispatch = useDispatch()\r\n\r\n    const addToCartHandler = useCallback((book: BookType) => {\r\n        dispatch(addToCart(book))\r\n        dispatch(calculateCost())\r\n    }, [dispatch])\r\n\r\n    const products = books.map(book => {\r\n        return <Grid item style={{margin: '10px'}} key={book.id} md={3} >\r\n            <Paper elevation={3} style={{padding: '10px', minHeight: '500px'}}>\r\n                <Product\r\n                    book={book}\r\n                    addToCart={addToCartHandler}\r\n                />\r\n            </Paper>\r\n        </Grid>\r\n    })\r\n\r\n    return (\r\n        <Container >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={3}\r\n            >\r\n                {products}\r\n            </Grid>\r\n        </Container>\r\n    )\r\n})","import {Button, Grid} from '@material-ui/core';\r\nimport React from 'react';\r\nimport {BookType} from '../../catalog/catalog-reducer';\r\nimport {ExtendedBookType} from '../cart-reducer';\r\n\r\ntype PurchasePropsType = {\r\n    book: BookType & ExtendedBookType\r\n    incrQuantity: () => void\r\n    decrQuantity: () => void\r\n}\r\n\r\nexport const Purchase = React.memo((props: PurchasePropsType) => {\r\n    return (\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" alignContent={'center'}>\r\n            <Grid container item xs={4} alignContent=\"center\" justify={'center'}>\r\n                <img\r\n                    src={props.book.image}\r\n                    alt=\"\"\r\n                    style={{maxWidth: '100px'}}\r\n                />\r\n            </Grid>\r\n            <Grid container item xs={4} direction={'column'} justify={'space-evenly'}>\r\n                <p>Title : {props.book.title}</p>\r\n                <p>Author: {props.book.author}</p>\r\n                <p>Price: {props.book.price} $</p>\r\n            </Grid>\r\n            <Grid container justify={'space-evenly'} alignItems={'center'} direction={'row'} item xs={4}>\r\n                <Button variant=\"contained\" color=\"primary\" size={'small'} onClick={props.decrQuantity}>-</Button>\r\n                <div>{props.book.count}</div>\r\n                <Button variant=\"contained\" color=\"primary\" size={'small'} onClick={props.incrQuantity}>+</Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n})","import React from 'react';\r\nimport {useFormik} from 'formik';\r\nimport TextField from '@material-ui/core/TextField/TextField';\r\nimport {Button} from '@material-ui/core';\r\n\r\n\r\nexport const OrderForm = React.memo(() => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            surname: '',\r\n            address: '',\r\n            phone: ''\r\n        },\r\n        onSubmit: values => {\r\n        },\r\n    });\r\n\r\n\r\n    return <form onSubmit={formik.handleSubmit}>\r\n        <TextField id=\"name\"\r\n                   type=\"text\"\r\n                   label=\"Filled\"\r\n                   variant=\"outlined\"\r\n                   fullWidth margin=\"dense\"\r\n                   {...formik.getFieldProps('name')}\r\n        />\r\n        <TextField id=\"surname\"\r\n                   label=\"Filled\"\r\n                   variant=\"outlined\"\r\n                   fullWidth\r\n                   margin=\"dense\"\r\n                   {...formik.getFieldProps('surname')}\r\n        />\r\n        <TextField id=\"address\"\r\n                   label=\"Filled\"\r\n                   variant=\"outlined\"\r\n                   fullWidth\r\n                   margin=\"dense\"\r\n                   {...formik.getFieldProps('address')}\r\n        />\r\n        <TextField id=\"phone\"\r\n                   label=\"Filled\"\r\n                   variant=\"outlined\"\r\n                   fullWidth\r\n                   margin=\"dense\"\r\n                   {...formik.getFieldProps('phone')}\r\n        />\r\n        <Button variant='outlined' color=\"primary\" type={'submit'}>ORDER</Button>\r\n    </form>\r\n})","import React, {useCallback} from 'react';\r\nimport {Container, Grid, Paper} from '@material-ui/core';\r\nimport {Purchase} from './purchase/Purchase';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootState} from '../../app/store';\r\nimport {BookType} from '../catalog/catalog-reducer';\r\nimport {calculateCost, decrQuantityAC, ExtendedBookType, incrQuantityAC} from './cart-reducer';\r\nimport {OrderForm} from '../catalog/orderForm/OrderForm';\r\n\r\nexport const Cart = React.memo(() => {\r\n    const books = useSelector<RootState, Array<BookType & ExtendedBookType>>(state => state.cart.books)\r\n    const dispatch = useDispatch()\r\n\r\n    const incrQuantity = useCallback((productId: number) => {\r\n        dispatch(incrQuantityAC({productId}))\r\n        dispatch(calculateCost())\r\n    }, [dispatch])\r\n    const decrQuantity = useCallback((productId: number) => {\r\n        dispatch(decrQuantityAC({productId}))\r\n        dispatch(calculateCost())\r\n    }, [dispatch])\r\n\r\n    const products = books.map(book =>\r\n        <Paper key={book.id} style={{marginBottom: '10px'}}>\r\n            <Purchase\r\n                book={book}\r\n                incrQuantity={() => incrQuantity(book.id)}\r\n                decrQuantity={() => decrQuantity(book.id)}\r\n            />\r\n        </Paper>\r\n   )\r\n\r\n\r\n    return (\r\n        <Container >\r\n        <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"flex-start\"\r\n            spacing={3}\r\n            style={{marginTop: '20px'}}\r\n        >\r\n            <Grid item xs={8}>\r\n                {products}\r\n            </Grid>\r\n            <Grid item xs={2} >\r\n                <Paper elevation={3} style={{padding: '10px'}}>\r\n                    <OrderForm/>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n        </Container>\r\n    )\r\n})","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBf1G7QLO4zdA5W1PVZ_RP1xx8jLyNq2uM\",\r\n    authDomain: \"bookshop-firebase.firebaseapp.com\",\r\n    databaseURL: \"https://bookshop-firebase-default-rtdb.firebaseio.com\",\r\n    projectId: \"bookshop-firebase\",\r\n    storageBucket: \"bookshop-firebase.appspot.com\",\r\n    messagingSenderId: \"868504473049\",\r\n    appId: \"1:868504473049:web:b7eaae96a5ebc350f8ddc8\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase\r\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\n\r\n\r\nexport type ProductType = {\r\n    book : Array<BookType>\r\n}\r\n\r\nexport type BookType = {\r\n    title: string,\r\n    image: string\r\n    id: number,\r\n    description: string\r\n    price: number\r\n    author : string\r\n    inCart: boolean\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: 'catalog',\r\n    initialState: {book : []} as ProductType ,\r\n    reducers: {\r\n        setProduct(state, action : PayloadAction<Array<BookType>>) {\r\n           state.book = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const catalogReducer = slice.reducer\r\nexport const {setProduct} = slice.actions\r\n\r\n","import AppBar from '@material-ui/core/AppBar';\r\nimport React, {useEffect, useState} from 'react';\r\nimport './App.css';\r\nimport {Button, Toolbar} from '@material-ui/core';\r\nimport {Catalog} from '../features/catalog/Catalog';\r\nimport {Cart} from '../features/cart/Cart';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootState} from './store';\r\nimport firebase from './../utils/firebase';\r\nimport { setProduct } from '../features/catalog/catalog-reducer';\r\n\r\nfunction App() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const a = firebase.database().ref('book');\r\n        a.on('value',(snapshot) => {\r\n            const products = snapshot.val()\r\n            dispatch(setProduct(products))\r\n        })\r\n\r\n    }, [])\r\n\r\n    const [showCatalog, setShowCatalog] = useState(true)\r\n    const totalPrice = useSelector<RootState, number>(state => state.cart.totalPrice)\r\n\r\n    const changeShowHandler = () => {\r\n        setShowCatalog(!showCatalog)\r\n    }\r\n\r\n    const button = showCatalog ?\r\n        <Button variant='outlined' color=\"secondary\" onClick={changeShowHandler}>Cart</Button>\r\n        :\r\n        <Button variant='outlined' color=\"secondary\" onClick={changeShowHandler}>Shop</Button>\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    {button}\r\n                    {totalPrice ? <div>{totalPrice} $</div> : null}\r\n                </Toolbar>\r\n            </AppBar>\r\n            {showCatalog ? <Catalog/> : <Cart/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {combineReducers, compose, configureStore} from '@reduxjs/toolkit';\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport {catalogReducer} from '../features/catalog/catalog-reducer';\r\nimport {cartReducer} from '../features/cart/cart-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    catalog : catalogReducer,\r\n    cart : cartReducer\r\n})\r\n\r\nexport type RootReducerType = typeof rootReducer\r\n\r\nexport const store = configureStore({\r\n        reducer: rootReducer,\r\n        middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunkMiddleWare)\r\n    }\r\n)\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './app/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n          <App/>\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"Product_image__18uoN\",\"description\":\"Product_description__rtGmG\"};"],"sourceRoot":""}