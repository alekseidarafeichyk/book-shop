{"version":3,"sources":["features/catalog/product/Product.tsx","features/cart/cart-reducer.ts","features/catalog/Catalog.tsx","features/cart/purchase/Purchase.tsx","features/catalog/orderForm/OrderForm.tsx","features/cart/Cart.tsx","utils/firebase.ts","features/catalog/catalog-reducer.ts","app/App.tsx","reportWebVitals.ts","app/store.ts","index.tsx","features/catalog/product/Product.module.css"],"names":["Product","React","memo","props","buttonDisabled","useSelector","state","cart","books","some","book","id","className","style","productContainer","image","src","alt","description","title","author","price","Button","variant","disabled","color","onClick","addToCart","slice","createSlice","name","initialState","totalPrice","reducers","action","every","payload","push","count","incrQuantityAC","index","findIndex","el","productId","decrQuantityAC","splice","calculateCost","newTotalPrice","reduce","sum","current","Math","floor","cartReducer","reducer","actions","Catalog","catalog","dispatch","useDispatch","addToCartHandler","useCallback","Container","Grid","container","direction","justify","alignItems","spacing","map","item","margin","Paper","elevation","Purchase","xs","maxWidth","size","decrQuantity","incrQuantity","OrderForm","formik","useFormik","initialValues","surname","address","phone","onSubmit","values","handleSubmit","type","label","fullWidth","getFieldProps","Cart","marginTop","alignContent","padding","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","setProduct","catalogReducer","App","useEffect","database","ref","on","snapshot","products","val","console","log","useState","showCatalog","setShowCatalog","changeShowHandler","button","AppBar","position","Toolbar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","configureStore","middleware","getDefaultMiddleware","prepend","thunkMiddleWare","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.767cea0c.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './Product.module.css'\r\nimport {Button} from '@material-ui/core';\r\nimport {BookType} from '../catalog-reducer';\r\nimport {useSelector} from 'react-redux';\r\nimport {RootState} from '../../../app/store';\r\nimport {ExtendedBookType} from '../../cart/cart-reducer';\r\n\r\nexport type ProductPropsType = {\r\n    book: BookType\r\n    addToCart: (book: BookType) => void\r\n}\r\n\r\nexport const Product = React.memo( (props: ProductPropsType) => {\r\n    const productInCart = useSelector<RootState,Array<BookType & ExtendedBookType>>(state => state.cart.books)\r\n\r\n    const buttonDisabled = productInCart.some(book => book.id === props.book.id)\r\n\r\n    return (\r\n        <div className={style.productContainer}>\r\n            <div className={style.image}>\r\n                <img src={props.book.image} alt=\"\"/>\r\n            </div>\r\n            <div className={style.description}>\r\n                <p>{props.book.title}</p>\r\n                <p>{props.book.description}</p>\r\n                <p>{props.book.author}</p>\r\n                <p>{`${props.book.price} $`}</p>\r\n            </div>\r\n            <Button variant=\"contained\" disabled={buttonDisabled} color=\"primary\" onClick={() => {\r\n                props.addToCart(props.book)\r\n            }}>add cart</Button>\r\n        </div>\r\n    )\r\n})","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\nimport {BookType} from '../catalog/catalog-reducer';\r\n\r\nexport type CartProductType = {\r\n    books: Array<BookType & ExtendedBookType>\r\n    totalPrice: number\r\n}\r\n\r\nexport type ExtendedBookType = {\r\n    count: number\r\n}\r\n\r\n\r\nexport const slice = createSlice({\r\n    name: 'cart',\r\n    initialState: {books: [], totalPrice: 0} as CartProductType,\r\n    reducers: {\r\n        addToCart(state, action: PayloadAction<BookType>) {\r\n            if (state.books.every(book => book.id !== action.payload.id)) {\r\n                state.books.push({...action.payload, count: 1})\r\n            }\r\n        },\r\n        incrQuantityAC(state, action: PayloadAction<{ productId: number }>) {\r\n            let index = state.books.findIndex(el => el.id === action.payload.productId)\r\n            state.books[index].count += 1\r\n        },\r\n        decrQuantityAC(state, action: PayloadAction<{ productId: number }>) {\r\n            const index = state.books.findIndex(el => el.id === action.payload.productId)\r\n\r\n            state.books[index].count -= 1\r\n\r\n            if (state.books[index].count === 0) {\r\n                state.books.splice(index, 1)\r\n            }\r\n        },\r\n        calculateCost(state, action: PayloadAction) {\r\n            let newTotalPrice = state.books.reduce((sum, current) => sum + current.price * current.count, 0)\r\n            newTotalPrice = Math.floor(newTotalPrice * 100) / 100\r\n            state.totalPrice = newTotalPrice\r\n        }\r\n    }\r\n})\r\n\r\nexport const cartReducer = slice.reducer\r\nexport const {addToCart, incrQuantityAC, decrQuantityAC, calculateCost} = slice.actions","import React, {useCallback} from 'react';\r\nimport {Container, Grid, Paper} from '@material-ui/core';\r\nimport {Product} from './product/Product';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootState} from '../../app/store';\r\nimport {BookType} from './catalog-reducer';\r\nimport {addToCart, calculateCost} from '../cart/cart-reducer';\r\n\r\nexport const   Catalog = React.memo(() => {\r\n    const books = useSelector<RootState, Array<BookType>>(state => state.catalog.book)\r\n    const dispatch = useDispatch()\r\n\r\n    const addToCartHandler = useCallback ((book: BookType) => {\r\n        dispatch(addToCart(book))\r\n        dispatch(calculateCost())\r\n    },[dispatch])\r\n\r\n    return (\r\n        <Container>\r\n            <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\" spacing={3}>\r\n                {books.map(book => (<Grid item style={{margin: '10px'}} key={book.id}>\r\n                        <Paper elevation={3}>\r\n                            <Product\r\n                                book={book}\r\n                                addToCart={addToCartHandler}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>)\r\n                )}\r\n            </Grid>\r\n        </Container>\r\n    )\r\n})","import {Button, Grid} from '@material-ui/core';\r\nimport React from 'react';\r\nimport {BookType} from '../../catalog/catalog-reducer';\r\nimport {ExtendedBookType} from '../cart-reducer';\r\n\r\ntype PurchasePropsType = {\r\n    book : BookType & ExtendedBookType\r\n    incrQuantity: () => void\r\n    decrQuantity: () => void\r\n}\r\n\r\nexport const Purchase = React.memo( (props: PurchasePropsType) => {\r\n    return (\r\n        <Grid container >\r\n            <Grid container justify={'center'} item xs={4} >\r\n                <img\r\n                    src= {props.book.image}\r\n                    alt=\"\"\r\n                    style={{maxWidth: '100px' }}\r\n                />\r\n            </Grid>\r\n            <Grid container item xs={4} direction={'column'} justify={'space-evenly'}>\r\n                <p>Title : {props.book.title}</p>\r\n                <p>Author: {props.book.author}</p>\r\n                <p>Price: {props.book.price} $</p>\r\n            </Grid>\r\n            <Grid container justify={'space-evenly'} alignItems={'center'} direction={'row'} item xs={4} >\r\n                <Button variant=\"contained\" color=\"primary\" size={'small'} onClick={props.decrQuantity}>-</Button>\r\n                <div>{props.book.count}</div>\r\n                <Button variant=\"contained\" color=\"primary\" size={'small'} onClick={props.incrQuantity}>+</Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n})","import React from 'react';\r\nimport {useFormik} from 'formik';\r\nimport TextField from '@material-ui/core/TextField/TextField';\r\nimport {Button} from '@material-ui/core';\r\n\r\n\r\nexport const OrderForm = React.memo(() => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            surname: '',\r\n            address: '',\r\n            phone: ''\r\n        },\r\n        onSubmit: values => {\r\n        },\r\n    });\r\n\r\n\r\n    return <form onSubmit={formik.handleSubmit}>\r\n        <TextField id=\"name\"\r\n                   type=\"text\"\r\n                   label=\"Filled\"\r\n                   variant=\"outlined\"\r\n                   fullWidth margin=\"dense\"\r\n                   {...formik.getFieldProps('name')}\r\n        />\r\n        <TextField id=\"surname\"\r\n                   label=\"Filled\"\r\n                   variant=\"outlined\"\r\n                   fullWidth\r\n                   margin=\"dense\"\r\n                   {...formik.getFieldProps('surname')}\r\n        />\r\n        <TextField id=\"address\"\r\n                   label=\"Filled\"\r\n                   variant=\"outlined\"\r\n                   fullWidth\r\n                   margin=\"dense\"\r\n                   {...formik.getFieldProps('address')}\r\n        />\r\n        <TextField id=\"phone\"\r\n                   label=\"Filled\"\r\n                   variant=\"outlined\"\r\n                   fullWidth\r\n                   margin=\"dense\"\r\n                   {...formik.getFieldProps('phone')}\r\n        />\r\n        <Button variant='outlined' color=\"primary\" type={'submit'}>ORDER</Button>\r\n    </form>\r\n})","import React, {useCallback} from 'react';\r\nimport {Grid, Paper} from '@material-ui/core';\r\nimport {Purchase} from './purchase/Purchase';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootState} from '../../app/store';\r\nimport {BookType} from '../catalog/catalog-reducer';\r\nimport {calculateCost, decrQuantityAC, ExtendedBookType, incrQuantityAC} from './cart-reducer';\r\nimport { OrderForm } from '../catalog/orderForm/OrderForm';\r\n\r\nexport const Cart = React.memo(() => {\r\n    const books = useSelector<RootState, Array<BookType & ExtendedBookType>>(state => state.cart.books)\r\n    const dispatch = useDispatch()\r\n\r\n    const incrQuantity = useCallback ((productId: number) => {\r\n        dispatch(incrQuantityAC({productId}))\r\n        dispatch(calculateCost())\r\n    },[dispatch])\r\n    const decrQuantity = useCallback ((productId: number) => {\r\n        dispatch(decrQuantityAC({productId}))\r\n        dispatch(calculateCost())\r\n    },[dispatch])\r\n\r\n\r\n    return (\r\n        <Grid container spacing={3} justify={'center'} style={{marginTop: '20px'}}>\r\n            <Grid container item direction={'row'} justify={'space-evenly'} xs={8}>\r\n                {\r\n                    books.map(book => <Grid item xs={12} style={{marginTop: '10px'}}>\r\n                        <Paper>\r\n                            <Purchase key={book.id}\r\n                                      book={book}\r\n                                      incrQuantity={() => incrQuantity(book.id)}\r\n                                      decrQuantity={() => decrQuantity(book.id)}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>)\r\n                }\r\n            </Grid>\r\n            <Grid item xs={2} alignContent={'center'}>\r\n                <Paper elevation={3} style={{padding: '10px'}}>\r\n                <OrderForm/>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n})","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBf1G7QLO4zdA5W1PVZ_RP1xx8jLyNq2uM\",\r\n    authDomain: \"bookshop-firebase.firebaseapp.com\",\r\n    databaseURL: \"https://bookshop-firebase-default-rtdb.firebaseio.com\",\r\n    projectId: \"bookshop-firebase\",\r\n    storageBucket: \"bookshop-firebase.appspot.com\",\r\n    messagingSenderId: \"868504473049\",\r\n    appId: \"1:868504473049:web:b7eaae96a5ebc350f8ddc8\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase\r\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\n\r\n\r\nexport type ProductType = {\r\n    book : Array<BookType>\r\n}\r\n\r\nexport type BookType = {\r\n    title: string,\r\n    image: string\r\n    id: number,\r\n    description: string\r\n    price: number\r\n    author : string\r\n    inCart: boolean\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: 'catalog',\r\n    initialState: {book : []} as ProductType ,\r\n    reducers: {\r\n        setProduct(state, action : PayloadAction<Array<BookType>>) {\r\n           state.book = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const catalogReducer = slice.reducer\r\nexport const {setProduct} = slice.actions\r\n\r\n","import AppBar from '@material-ui/core/AppBar';\r\nimport React, {useEffect, useState} from 'react';\r\nimport './App.css';\r\nimport {Button, Toolbar} from '@material-ui/core';\r\nimport {Catalog} from '../features/catalog/Catalog';\r\nimport {Cart} from '../features/cart/Cart';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootState} from './store';\r\nimport firebase from './../utils/firebase';\r\nimport { setProduct } from '../features/catalog/catalog-reducer';\r\n\r\nfunction App() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const a = firebase.database().ref('book');\r\n        a.on('value',(snapshot) => {\r\n            const products = snapshot.val()\r\n            console.log(products)\r\n                debugger\r\n            dispatch(setProduct(products))\r\n        })\r\n\r\n    }, [])\r\n\r\n    const [showCatalog, setShowCatalog] = useState(true)\r\n    const totalPrice = useSelector<RootState, number>(state => state.cart.totalPrice)\r\n\r\n    const changeShowHandler = () => {\r\n        setShowCatalog(!showCatalog)\r\n    }\r\n\r\n    const button = showCatalog ?\r\n        <Button variant='outlined' color=\"secondary\" onClick={changeShowHandler}>Cart</Button>\r\n        :\r\n        <Button variant='outlined' color=\"secondary\" onClick={changeShowHandler}>Shop</Button>\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    {button}\r\n                    {totalPrice ? <div>{totalPrice} $</div> : null}\r\n                </Toolbar>\r\n            </AppBar>\r\n            {showCatalog ? <Catalog/> : <Cart/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {combineReducers, compose, configureStore} from '@reduxjs/toolkit';\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport {catalogReducer} from '../features/catalog/catalog-reducer';\r\nimport {cartReducer} from '../features/cart/cart-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    catalog : catalogReducer,\r\n    cart : cartReducer\r\n})\r\n\r\nexport type RootReducerType = typeof rootReducer\r\n\r\nexport const store = configureStore({\r\n        reducer: rootReducer,\r\n        middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunkMiddleWare)\r\n    }\r\n)\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './app/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n          <App/>\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"productContainer\":\"Product_productContainer__rdpTK\",\"image\":\"Product_image__18uoN\",\"description\":\"Product_description__rtGmG\"};"],"sourceRoot":""}